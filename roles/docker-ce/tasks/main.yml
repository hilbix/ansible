
---

- name: make sure gpg is installed
  ansible.builtin.apt:
    name: gpg
    state: latest

- name: check Docker key present
  ansible.builtin.stat:
    path: /etc/apt/keyrings/docker.asc
  register: dockerkeystat

- name: Download Docker key if missing
  ansible.builtin.uri:
    url: https://download.docker.com/linux/debian/gpg
    return_content: true
  register: dockerkeyasc
  when: not dockerkeystat.stat.exists

- name: get ID from downloaded Docker key
  ansible.builtin.shell: |
    LC_ALL=C GNUPGHOME=/I/G/N/O/R/E/ gpg --no-options --dry-run --show-keys --keyid-format long --import-options show-only 2>/dev/null |
    awk '/^pub/ { trig=1; next } trig { print $1; trig=0 }'
  args:
    stdin: '{{ dockerkeyasc.content }}'
    stdin_add_newline: false
  register: dockerkeyid
  when: not dockerkeystat.stat.exists

- name: install downloaded Docker key if the ID is correct
  ansible.builtin.copy:
    content: '{{ dockerkeyasc.content }}'
    dest: /etc/apt/keyrings/docker.asc
  when: not dockerkeystat.stat.exists and dockerkeyid.stdout == '9DC858229FC7DD38854AE2D88D81803C0EBFCD88'

- name: get docker repo line
  ansible.builtin.shell:
    cmd: 'echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian $(. /etc/os-release && echo "$VERSION_CODENAME") stable"'
  register: dockerrepo

- name: add Docker repo
  ansible.builtin.copy:
    content: '{{ dockerrepo.stdout }}'
    dest: /etc/apt/sources.list.d/docker.list

- name: install Docker
  ansible.builtin.apt:
    name:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin
    state: latest
    update_cache: true

